{
  "address": "0xe0b53b5d04a66877e3daf91e37f256204f09912b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2e4061080bbbd5037f8c7f476a242340ef9a34a097956e75f3d5fd7238db07e8",
  "receipt": {
    "to": null,
    "from": "0xd502be9bffe489df94ad7f0a9b81e52d7731a5ad",
    "contractAddress": "0xe0b53b5d04a66877e3daf91e37f256204f09912b",
    "transactionIndex": "0x264",
    "gasUsed": "0xfdcf2",
    "logsBloom": "0x
    "blockHash": "0x6ad81577f6612a8c6721d98ed4f61d92cc8bb6d2659b70ec89c444bfc7f3b2f8",
    "transactionHash": "0x2e4061080bbbd5037f8c7f476a242340ef9a34a097956e75f3d5fd7238db07e8",
    "logs": [],
    "blockNumber": "0x6bf3f9",
    "cumulativeGasUsed": "0xd7d9c3",
    "status": "0x1"
  },
  "args": ["0x1cF3Aa9DBF4880d797945726B94B9d29164211BE"],
  "numDeployments": 2,
  "solcInputHash": "7cb7bb550e3886782f06c9d2f2f3b74a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        \\n        // payable(msg.sender).transfer(address(this).balance);\\n      \\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory funders = s_funders;\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        } \\n        s_funders = new address[](0);\\n        (bool success,) = i_owner.call{ value: address(this).balance}(\\\"\\\");\\n        require(success) ;\\n    }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n}\",\"keccak256\":\"0xba4c5dfa51f5f4c43513a5571006a1068b3876a9618c97ce512fe62682d1bf87\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n    \\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf80d0097644a085b4c844267944a5e39e3f139fb62887c81a1035169d5d54ba9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012713803806200127183398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611105806200016c6000396000f3fe60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461012f578063b60d42881461015a578063be2693f014610164578063dba6335f1461016e5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100f2575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610a59565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610ab7565b6101bf565b6040516100df9190610afd565b60405180910390f35b6100f06101d7565b005b3480156100fe57600080fd5b5061011960048036038101906101149190610b44565b610419565b6040516101269190610b80565b60405180910390f35b34801561013b57600080fd5b50610144610458565b6040516101519190610afd565b60405180910390f35b610162610465565b005b61016c61059f565b005b34801561017a57600080fd5b50610183610831565b6040516101909190610b80565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025e576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103095760006001828154811061028457610283610b9b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030190610bf9565b915050610261565b50600067ffffffffffffffff81111561032557610324610c42565b5b6040519080825280602002602001820160405280156103535781602001602082028036833780820191505090505b5060019080519060200190610369929190610933565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039090610ca2565b60006040518083038185875af1925050503d80600081146103cd576040519150601f19603f3d011682016040523d82523d6000602084013e6103d2565b606091505b5050905080610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610d14565b60405180910390fd5b50565b6001818154811061042957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104a4600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085790919063ffffffff16565b10156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90610d80565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105339190610da0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610626576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106aa57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610660575b5050505050905060005b81518110156107345760008282815181106106d2576106d1610b9b565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072c90610bf9565b9150506106b4565b50600067ffffffffffffffff8111156107505761074f610c42565b5b60405190808252806020026020018201604052801561077e5781602001602082028036833780820191505090505b5060019080519060200190610794929190610933565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516107dd90610ca2565b60006040518083038185875af1925050503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081f565b606091505b505090508061082d57600080fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061086383610893565b90506000670de0b6b3a7640000858361087c9190610df6565b6108869190610e7f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108dc57600080fd5b505afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190610f3d565b5050509150506402540be4008161092b9190610fb8565b915050919050565b8280548282559060005260206000209081019282156109ac579160200282015b828111156109ab5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610953565b5b5090506109b991906109bd565b5090565b5b808211156109d65760008160009055506001016109be565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a1f610a1a610a15846109da565b6109fa565b6109da565b9050919050565b6000610a3182610a04565b9050919050565b6000610a4382610a26565b9050919050565b610a5381610a38565b82525050565b6000602082019050610a6e6000830184610a4a565b92915050565b600080fd5b6000610a84826109da565b9050919050565b610a9481610a79565b8114610a9f57600080fd5b50565b600081359050610ab181610a8b565b92915050565b600060208284031215610acd57610acc610a74565b5b6000610adb84828501610aa2565b91505092915050565b6000819050919050565b610af781610ae4565b82525050565b6000602082019050610b126000830184610aee565b92915050565b610b2181610ae4565b8114610b2c57600080fd5b50565b600081359050610b3e81610b18565b92915050565b600060208284031215610b5a57610b59610a74565b5b6000610b6884828501610b2f565b91505092915050565b610b7a81610a79565b82525050565b6000602082019050610b956000830184610b71565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0482610ae4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3757610c36610bca565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c8c600083610c71565b9150610c9782610c7c565b600082019050919050565b6000610cad82610c7f565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cfe600b83610cb7565b9150610d0982610cc8565b602082019050919050565b60006020820190508181036000830152610d2d81610cf1565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d6a601b83610cb7565b9150610d7582610d34565b602082019050919050565b60006020820190508181036000830152610d9981610d5d565b9050919050565b6000610dab82610ae4565b9150610db683610ae4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610deb57610dea610bca565b5b828201905092915050565b6000610e0182610ae4565b9150610e0c83610ae4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4557610e44610bca565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8a82610ae4565b9150610e9583610ae4565b925082610ea557610ea4610e50565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ecf81610eb0565b8114610eda57600080fd5b50565b600081519050610eec81610ec6565b92915050565b6000819050919050565b610f0581610ef2565b8114610f1057600080fd5b50565b600081519050610f2281610efc565b92915050565b600081519050610f3781610b18565b92915050565b600080600080600060a08688031215610f5957610f58610a74565b5b6000610f6788828901610edd565b9550506020610f7888828901610f13565b9450506040610f8988828901610f28565b9350506060610f9a88828901610f28565b9250506080610fab88828901610edd565b9150509295509295909350565b6000610fc382610ef2565b9150610fce83610ef2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100d5761100c610bca565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104a57611049610bca565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108757611086610bca565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c4576110c3610bca565b5b82820290509291505056fea26469706673582212205e440fc177b5508e64a8cb760bb52a6c657f368fef64578f25318829fbcedfbf64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461012f578063b60d42881461015a578063be2693f014610164578063dba6335f1461016e5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100f2575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610a59565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610ab7565b6101bf565b6040516100df9190610afd565b60405180910390f35b6100f06101d7565b005b3480156100fe57600080fd5b5061011960048036038101906101149190610b44565b610419565b6040516101269190610b80565b60405180910390f35b34801561013b57600080fd5b50610144610458565b6040516101519190610afd565b60405180910390f35b610162610465565b005b61016c61059f565b005b34801561017a57600080fd5b50610183610831565b6040516101909190610b80565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025e576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103095760006001828154811061028457610283610b9b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030190610bf9565b915050610261565b50600067ffffffffffffffff81111561032557610324610c42565b5b6040519080825280602002602001820160405280156103535781602001602082028036833780820191505090505b5060019080519060200190610369929190610933565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039090610ca2565b60006040518083038185875af1925050503d80600081146103cd576040519150601f19603f3d011682016040523d82523d6000602084013e6103d2565b606091505b5050905080610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d90610d14565b60405180910390fd5b50565b6001818154811061042957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104a4600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461085790919063ffffffff16565b10156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90610d80565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105339190610da0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610626576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106aa57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610660575b5050505050905060005b81518110156107345760008282815181106106d2576106d1610b9b565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072c90610bf9565b9150506106b4565b50600067ffffffffffffffff8111156107505761074f610c42565b5b60405190808252806020026020018201604052801561077e5781602001602082028036833780820191505090505b5060019080519060200190610794929190610933565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516107dd90610ca2565b60006040518083038185875af1925050503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081f565b606091505b505090508061082d57600080fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061086383610893565b90506000670de0b6b3a7640000858361087c9190610df6565b6108869190610e7f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108dc57600080fd5b505afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190610f3d565b5050509150506402540be4008161092b9190610fb8565b915050919050565b8280548282559060005260206000209081019282156109ac579160200282015b828111156109ab5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610953565b5b5090506109b991906109bd565b5090565b5b808211156109d65760008160009055506001016109be565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a1f610a1a610a15846109da565b6109fa565b6109da565b9050919050565b6000610a3182610a04565b9050919050565b6000610a4382610a26565b9050919050565b610a5381610a38565b82525050565b6000602082019050610a6e6000830184610a4a565b92915050565b600080fd5b6000610a84826109da565b9050919050565b610a9481610a79565b8114610a9f57600080fd5b50565b600081359050610ab181610a8b565b92915050565b600060208284031215610acd57610acc610a74565b5b6000610adb84828501610aa2565b91505092915050565b6000819050919050565b610af781610ae4565b82525050565b6000602082019050610b126000830184610aee565b92915050565b610b2181610ae4565b8114610b2c57600080fd5b50565b600081359050610b3e81610b18565b92915050565b600060208284031215610b5a57610b59610a74565b5b6000610b6884828501610b2f565b91505092915050565b610b7a81610a79565b82525050565b6000602082019050610b956000830184610b71565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0482610ae4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c3757610c36610bca565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c8c600083610c71565b9150610c9782610c7c565b600082019050919050565b6000610cad82610c7f565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cfe600b83610cb7565b9150610d0982610cc8565b602082019050919050565b60006020820190508181036000830152610d2d81610cf1565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d6a601b83610cb7565b9150610d7582610d34565b602082019050919050565b60006020820190508181036000830152610d9981610d5d565b9050919050565b6000610dab82610ae4565b9150610db683610ae4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610deb57610dea610bca565b5b828201905092915050565b6000610e0182610ae4565b9150610e0c83610ae4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4557610e44610bca565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8a82610ae4565b9150610e9583610ae4565b925082610ea557610ea4610e50565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ecf81610eb0565b8114610eda57600080fd5b50565b600081519050610eec81610ec6565b92915050565b6000819050919050565b610f0581610ef2565b8114610f1057600080fd5b50565b600081519050610f2281610efc565b92915050565b600081519050610f3781610b18565b92915050565b600080600080600060a08688031215610f5957610f58610a74565b5b6000610f6788828901610edd565b9550506020610f7888828901610f13565b9450506040610f8988828901610f28565b9350506060610f9a88828901610f28565b9250506080610fab88828901610edd565b9150509295509295909350565b6000610fc382610ef2565b9150610fce83610ef2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100d5761100c610bca565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561104a57611049610bca565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561108757611086610bca565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110c4576110c3610bca565b5b82820290509291505056fea26469706673582212205e440fc177b5508e64a8cb760bb52a6c657f368fef64578f25318829fbcedfbf64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
